[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "eagle-mcp-server"
version = "0.1.0"
description = "A Modern Context Protocol (MCP) server for Eagle App integration"
readme = "README.md"
requires-python = ">=3.11"
license = {text = "MIT"}
authors = [
    {name = "Eagle MCP Server Contributors"},
]
homepage = "https://github.com/yourusername/eagle-mcp-server"
repository = "https://github.com/yourusername/eagle-mcp-server"
documentation = "https://github.com/yourusername/eagle-mcp-server#readme"
issues = "https://github.com/yourusername/eagle-mcp-server/issues"
keywords = ["mcp", "eagle", "model-context-protocol", "ai", "assistant"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
]
dependencies = [
    "mcp>=1.0.0",
    "httpx>=0.27.0",
    "pydantic>=2.0.0",
    "anyio>=4.0.0",
    "python-dotenv>=1.0.0"
]

[project.optional-dependencies]
dev = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.24.0",
    "ruff>=0.1.0",
    "mypy>=1.8.0"
]

[tool.uv]
dev-dependencies = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.24.0",
    "ruff>=0.1.0",
    "mypy>=1.8.0"
]

[tool.ruff]
line-length = 100
target-version = "py311"

[tool.ruff.lint]
select = ["E", "W", "F", "I", "N", "B", "A", "C4", "T20", "SIM", "ARG", "PL"]
ignore = ["E501", "N818", "B008"]

[tool.mypy]
python_version = "3.11"
strict = true
warn_return_any = true
warn_unused_configs = true

[tool.pytest.ini_options]
asyncio_mode = "auto"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]

[tool.hatch.build.targets.wheel]
packages = ["."]